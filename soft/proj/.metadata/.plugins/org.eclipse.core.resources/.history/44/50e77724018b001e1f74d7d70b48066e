/*****************************************************************************************
 * HEIG-VD
 * Haute Ecole d'Ingenerie et de Gestion du Canton de Vaud
 * School of Business and Engineering in Canton de Vaud
 *****************************************************************************************
 * REDS Institute
 * Reconfigurable Embedded Digital Systems
 *****************************************************************************************
 *
 * File                 : app_timer_irq.c
 * Author               : Anthony Convers
 * Date                 : 27.10.2022
 *
 * Context              : ARE lab
 *
 *****************************************************************************************
 * Brief: Using timer IRQ on DE1-SoC board
 *
 *****************************************************************************************
 * Modifications :
 * Ver    Date        Student      Comments
 * 0.0    27.10.2022  ACS           Initial version.
 *
*****************************************************************************************/
#include <stdint.h>
#include <stdbool.h>
#include <stdio.h>
#include "axi_lw.h"
#include "exceptions.h"
#include "pio_function.h"

int __auto_semihosting;

int main(void){

    // Initialize the banked stack pointer register for IRQ mode
    set_A9_IRQ_stack();

    // Config gic
    config_GIC();

    // Enable interrupts in the A9 processor
    enable_A9_interrupts();

    // Initialize the timer
    // Clock frequency = 25 MHz
    // 10 seconds = 250 000 000 cycles
    Timer_init(250000000);

    // Start the timer
    Timer_start();

    // print timer value
    printf("Timer value : %d\n", Timer_get_value());

    // Wait for 2 seconds
    while(Timer_get_value() > 200000000);

    // print timer value
    printf("Timer value : %d\n", Timer_get_value());

    // Stop the timer
    Timer_stop();

    // print timer value
    printf("Timer value : %d\n", Timer_get_value());

    return 0;
}
